#!/bin/sh
# rsyncbtrfs - an rsync/btrfs combo backup system which uses the
#              subvolume snapshot facilities of btrfs to perform
#              incremental backups.
# Copyright (C) 2014 Mansour Behabadi <mansour@oxplot.com>
#

usage() {
  echo "Usage: rsyncbtrfs {init|backup} arg arg ...

  init <dst>                  initialize a backup directory

  backup <src> <dst> <args>   backup src to dst, passing <args>
                              to rsync

"
}

case $1 in

init)
  [ $# -ge 2 ] || { usage $0; exit 255; }
  touch "$2/.rsyncbtrfs"
;;

backup)
  [ $# -ge 3 ] || { usage $0; exit 255; }
  BACKUP_SRC="$2"
  BACKUP_DST="$3"

  shift 3

  # We do a simple check to prevent situations where the backup dst is
  # mistyped.

  if [ ! -e "$BACKUP_DST/.rsyncbtrfs" ]
  then
    echo "dst is not initialized - run 'rsyncbtrfs init $BACKUP_DST'"
    exit 254
  fi

  # We don't want to have bind mounted source lying around in case of
  # errors.

  TMP_INPROG="`mktemp -d "$BACKUP_DST/.inprog-XXXXXXX"`"
  TMP_MOUNT="`mktemp -d --tmpdir rsyncbtrfs-XXXXXXX`"
  NEW_SUBVOL="`date +%F-%T`"
 
  trap "
    umount "'"'"$TMP_MOUNT"'"'";
    rmdir "'"'"$TMP_MOUNT"'"'";
    btrfs subvolume delete "'"'"$TMP_INPROG/vol"'"'" &>/dev/null;
    rm -f "'"'"$TMP_INPROG/cur"'"'";
    rmdir "'"'"$TMP_INPROG"'"'";
  " INT QUIT TERM EXIT
  
  mount --bind "$BACKUP_SRC" "$TMP_MOUNT" || exit 253

  # Decide if the first subvolume is created or the current one is
  # snapshotted.

  if [ -L "$BACKUP_DST/cur" ]
  then
    btrfs subvolume snapshot \
      "$BACKUP_DST/`readlink "$BACKUP_DST/cur"`" \
      "$TMP_INPROG/vol" || exit 253
  else
    btrfs subvolume create "$TMP_INPROG/vol" || exit 253
  fi

  # Do the backup.

  rsync --delete --delete-before --delete-excluded --inplace \
    --no-whole-file -a $@ \
    "$TMP_MOUNT/" "$TMP_INPROG/vol" || exit 253

  # Move the new backup subvolume to its final path

  mv -Tn "$TMP_INPROG/vol" "$BACKUP_DST/$NEW_SUBVOL"

  if [ -d "$TMP_INPROG/vol" ]
  then
    echo "$NEW_SUBVOL already exists - discarding new backup"
    exit 253
  fi

  # Point cur symlink to the backup we just made.

  ln -s "$NEW_SUBVOL" "$TMP_INPROG/cur" || exit 253
  mv -Tf "$TMP_INPROG/cur" "$BACKUP_DST/cur" || exit 253

;;

*)
  usage
  exit 255
;;
esac

exit 0
